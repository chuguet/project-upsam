//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.24 at 10:03:45 PM CET 
//


package com.upsam.hospital.model.jaxb;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.upsam.hospital.model.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.upsam.hospital.model.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Stream }
     * 
     */
    public Stream createStream() {
        return new Stream();
    }

    /**
     * Create an instance of {@link Track }
     * 
     */
    public Track createTrack() {
        return new Track();
    }

    /**
     * Create an instance of {@link Force }
     * 
     */
    public Force createForce() {
        return new Force();
    }

    /**
     * Create an instance of {@link Torque }
     * 
     */
    public Torque createTorque() {
        return new Torque();
    }

    /**
     * Create an instance of {@link EmxDataFile }
     * 
     */
    public EmxDataFile createEmxDataFile() {
        return new EmxDataFile();
    }

    /**
     * Create an instance of {@link Trial }
     * 
     */
    public Trial createTrial() {
        return new Trial();
    }

    /**
     * Create an instance of {@link Static }
     * 
     */
    public Static createStatic() {
        return new Static();
    }

    /**
     * Create an instance of {@link Reference }
     * 
     */
    public Reference createReference() {
        return new Reference();
    }

    /**
     * Create an instance of {@link Event }
     * 
     */
    public Event createEvent() {
        return new Event();
    }

    /**
     * Create an instance of {@link Track1D }
     * 
     */
    public Track1D createTrack1D() {
        return new Track1D();
    }

    /**
     * Create an instance of {@link Track1DBand }
     * 
     */
    public Track1DBand createTrack1DBand() {
        return new Track1DBand();
    }

    /**
     * Create an instance of {@link Time }
     * 
     */
    public Time createTime() {
        return new Time();
    }

    /**
     * Create an instance of {@link TimeBand }
     * 
     */
    public TimeBand createTimeBand() {
        return new TimeBand();
    }

    /**
     * Create an instance of {@link Scalar }
     * 
     */
    public Scalar createScalar() {
        return new Scalar();
    }

    /**
     * Create an instance of {@link Freq }
     * 
     */
    public Freq createFreq() {
        return new Freq();
    }

    /**
     * Create an instance of {@link Vel1D }
     * 
     */
    public Vel1D createVel1D() {
        return new Vel1D();
    }

    /**
     * Create an instance of {@link Cycle }
     * 
     */
    public Cycle createCycle() {
        return new Cycle();
    }

    /**
     * Create an instance of {@link Angle }
     * 
     */
    public Angle createAngle() {
        return new Angle();
    }

    /**
     * Create an instance of {@link AngleBand }
     * 
     */
    public AngleBand createAngleBand() {
        return new AngleBand();
    }

    /**
     * Create an instance of {@link EventBand }
     * 
     */
    public EventBand createEventBand() {
        return new EventBand();
    }

    /**
     * Create an instance of {@link Calibration }
     * 
     */
    public Calibration createCalibration() {
        return new Calibration();
    }

    /**
     * Create an instance of {@link Platforms }
     * 
     */
    public Platforms createPlatforms() {
        return new Platforms();
    }

    /**
     * Create an instance of {@link Platform }
     * 
     */
    public Platform createPlatform() {
        return new Platform();
    }

    /**
     * Create an instance of {@link Corner1 }
     * 
     */
    public Corner1 createCorner1() {
        return new Corner1();
    }

    /**
     * Create an instance of {@link Corner2 }
     * 
     */
    public Corner2 createCorner2() {
        return new Corner2();
    }

    /**
     * Create an instance of {@link Corner3 }
     * 
     */
    public Corner3 createCorner3() {
        return new Corner3();
    }

    /**
     * Create an instance of {@link Corner4 }
     * 
     */
    public Corner4 createCorner4() {
        return new Corner4();
    }

    /**
     * Create an instance of {@link Volume }
     * 
     */
    public Volume createVolume() {
        return new Volume();
    }

    /**
     * Create an instance of {@link StickModel }
     * 
     */
    public StickModel createStickModel() {
        return new StickModel();
    }

    /**
     * Create an instance of {@link Link }
     * 
     */
    public Link createLink() {
        return new Link();
    }

}
